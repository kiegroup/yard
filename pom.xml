<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>org.jboss</groupId>
    <artifactId>jboss-parent</artifactId>
    <version>36</version>
    <relativePath/>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.kie.yard</groupId>
  <artifactId>yard-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>YaRD</name>
  <description>YaRD</description>

  <url>http://drools.org</url>
  <inceptionYear>2022</inceptionYear>
  <organization>
    <name>JBoss by Red Hat</name>
    <url>http://www.jboss.org/</url>
  </organization>

  <licenses>
    <license>
      <name>Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:https://github.com/kiegroup/yard.git</connection>
    <developerConnection>scm:git:git@github.com:kiegroup/yard.git</developerConnection>
    <url>https://github.com/kiegroup/yard</url>
  </scm>

  <developers>
    <developer>
      <name>All developers are listed in the KIE GitHub organization</name>
      <url>https://github.com/orgs/kiegroup/people</url>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <version.kogito>1.30.0.Final</version.kogito>
      <version.org.drools>8.30.0.Final</version.org.drools><!-- using 8 to keep kogito alignment -->
        <version.jackson>2.13.4</version.jackson><!-- need alignments with Drools jackson version -->
      <version.quarkus>2.14.0.Final</version.quarkus>
    <version.io.fabric8.crd-generator-api>5.12.1</version.io.fabric8.crd-generator-api>
    <version.org.junit>5.9.1</version.org.junit>
    <version.ch.qos.logback>1.2.11</version.ch.qos.logback>
    <version.com.networknt.json-schema-validator>1.0.66</version.com.networknt.json-schema-validator>
    <version.org.assertj>3.23.1</version.org.assertj>
    <version.info.picocli>4.6.3</version.info.picocli>
  </properties>

  <!-- distributionManagement section -->
  <distributionManagement>
    <repository>
      <id>jboss-releases-repository</id>
      <name>JBoss Releases Repository</name>
      <url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>jboss-snapshots-repository</id>
      <name>JBoss Snapshot Repository</name>
      <url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

<!-- this section temporarily removed until publication via RHT CI -->
  <!-- <repositories> -->
    <!-- Bootstrap repository to locate the parent pom when the parent pom
      has not been build locally. -->
    <!-- <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository> -->
      <!-- Duplicating the Maven Central repository here (as it is already coming from Super POM) makes the build much faster,
           as the Maven Central is now treated as the first (default) repository (because it is before the JBoss.org one).
           Artifacts with release (fixed) versions are being downloaded primarily from there. Without the central being the
           first repository the JBoss.org Nexus would be contacted first and since it is quite slow it slows down the build.
           We use JBoss.org repo only to download our SNAPSHOTs. -->
      <!-- <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories> -->
<!-- /this section temporarily removed until publication via RHT CI -->

  <modules>
    <module>yard-api-bootstrap</module>
    <module>yard-api</module>
    <module>yard-impl1</module>
    <module>yard-impl1-cli</module>
    <module>yard-impl1-jitexecutor</module>
    <module>yard-impl1-operator</module>
    <module>yard-kdtable</module>
  </modules>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.10.1</version>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
